{"ast":null,"code":"const search = require('https');\nconst querystring = require('querystring');\nconst LOCATION_API = \"/locations.json\";\n\n/***\n * SerpApiSearch generic implementation to call serpapi.com \n */\nclass SerpApiSearch {\n  constructor() {\n    let api_key = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n    let engine = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'google';\n    let timeout = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 60000;\n    if (api_key != null) {\n      this.api_key = api_key;\n    }\n    // set search engine\n    this.engine = engine;\n\n    // set default timeout\n    this.defaultTimeout = timeout;\n  }\n\n  // build url on the fly\n  // private\n  buildUrl(path, parameter, output) {\n    // Set language\n    parameter[\"source\"] = \"nodejs\";\n\n    // Set format\n    if (output != null) {\n      parameter[\"output\"] = output;\n    }\n\n    // Add api_key\n    if (parameter[\"api_key\"] == null) {\n      if (this.api_key != null) {\n        parameter[\"api_key\"] = this.api_key;\n      } else if (path == LOCATION_API) {\n        // skip free request\n      } else {\n        throw new Error(\"api_key is required. copy it from: https://serpapi.com/dashboard \");\n      }\n    }\n    if (parameter['engine'] == null) {\n      parameter['engine'] = this.engine;\n    }\n\n    // build url\n    return \"https://serpapi.com\" + path + \"?\" + querystring.stringify(parameter);\n  }\n\n  /***\n   * setTimeout \n   * @param timeout maximum time to wait the http response in ms (default: 60000ms)\n   */\n  setTimeout(timeout) {\n    this.defaultTimeout = timeout;\n  }\n\n  /***\n   * execute\n   * \n   * @param path URL path\n   * @param parameter query\n   * @param callback handle next step\n   * @param output format json|html\n   */\n  execute(path, parameter, callback, output) {\n    let url = this.buildUrl(path, parameter, output);\n    search.timeout = this.defaultTimeout;\n    search.get(url, resp => {\n      let data = '';\n\n      // A chunk of data has been recieved.\n      resp.on('data', chunk => {\n        data += chunk;\n      });\n\n      // The whole response has been received. Print out the result.\n      resp.on('end', () => {\n        try {\n          if (resp.statusCode == 200) {\n            callback(data);\n          } else {\n            throw data;\n          }\n        } catch (e) {\n          throw e;\n        }\n      });\n    }).on(\"error\", err => {\n      throw err;\n    });\n  }\n\n  /***\n   * Run raw search query \n   * \n   * @param [Map] parameter (see: serpapi.com)\n   * @param [Function] callback\n   */\n  search(parameter, output, callback) {\n    this.execute(\"/search\", parameter, callback, output);\n  }\n\n  /***\n   * Provide json search result in the callback\n   *\n   * @param [Map] parameter query\n   * @param [Function] callback with search result as json \n   */\n  json(parameter, callback) {\n    this.search(parameter, \"json\", data => {\n      let parsed = JSON.parse(data);\n      callback(parsed);\n    });\n  }\n\n  /***\n   * Provide html search result in the callback\n   *\n   * @param [Map] parameter\n   * @param [Function] callback with json as argument \n   * @param [String] api_key\n   */\n  html(parameter, callback) {\n    let api_key = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n    this.search(parameter, \"html\", data => {\n      callback(data);\n    }, api_key);\n  }\n\n  /***\n   * Location API returns matching location in the callback\n   */\n  location(q, limit, callback) {\n    let query = {\n      q: q,\n      limit: limit\n    };\n    this.execute(LOCATION_API, query, data => {\n      callback(JSON.parse(data));\n    }, null, null);\n  }\n\n  /***\n   * Account API returns account information in the callback\n   */\n  account(callback) {\n    this.execute(\"/account\", {}, data => {\n      callback(JSON.parse(data));\n    }, null, null);\n  }\n\n  /***\n   * Search Archive API returns search result from the archive\n   * @param search_id previous search result = search_metadata.id\n   * @param callback handle next step\n   * @param api_key user secret key\n   */\n  search_archive(search_id, callback) {\n    let api_key = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n    this.execute(\"/searches/\" + search_id + \".json\", {}, data => {\n      callback(JSON.parse(data));\n    }, null, api_key);\n  }\n}\nmodule.exports = SerpApiSearch;","map":{"version":3,"names":["search","require","querystring","LOCATION_API","SerpApiSearch","constructor","api_key","arguments","length","undefined","engine","timeout","defaultTimeout","buildUrl","path","parameter","output","Error","stringify","setTimeout","execute","callback","url","get","resp","data","on","chunk","statusCode","e","err","json","parsed","JSON","parse","html","location","q","limit","query","account","search_archive","search_id","module","exports"],"sources":["/Users/aluabajzanova/Desktop/skylineÂ /node_modules/google-search-results-nodejs/lib/SerpApiSearch.js"],"sourcesContent":["const search = require('https');\nconst querystring = require('querystring');\nconst LOCATION_API = \"/locations.json\"\n\n/***\n * SerpApiSearch generic implementation to call serpapi.com \n */\nclass SerpApiSearch {\n\n  constructor(api_key = null, engine = 'google', timeout = 60000) {\n    if (api_key != null) {\n      this.api_key = api_key\n    }\n    // set search engine\n    this.engine = engine\n\n    // set default timeout\n    this.defaultTimeout = timeout\n  }\n\n  // build url on the fly\n  // private\n  buildUrl(path, parameter, output) {\n    // Set language\n    parameter[\"source\"] = \"nodejs\"\n\n    // Set format\n    if (output != null) {\n      parameter[\"output\"] = output\n    }\n\n    // Add api_key\n    if (parameter[\"api_key\"] == null) {\n      if (this.api_key != null) {\n        parameter[\"api_key\"] = this.api_key\n      }\n      else if (path == LOCATION_API) {\n        // skip free request\n      }\n      else {\n        throw new Error(\"api_key is required. copy it from: https://serpapi.com/dashboard \")\n      }\n    }\n\n    if (parameter['engine'] == null) {\n      parameter['engine'] = this.engine\n    }\n\n    // build url\n    return \"https://serpapi.com\" + path + \"?\" + querystring.stringify(parameter)\n  }\n\n  /***\n   * setTimeout \n   * @param timeout maximum time to wait the http response in ms (default: 60000ms)\n   */\n  setTimeout(timeout) {\n    this.defaultTimeout = timeout\n  }\n\n  /***\n   * execute\n   * \n   * @param path URL path\n   * @param parameter query\n   * @param callback handle next step\n   * @param output format json|html\n   */\n  execute(path, parameter, callback, output) {\n    let url = this.buildUrl(path, parameter, output)\n    search.timeout = this.defaultTimeout\n    search.get(url, (resp) => {\n      let data = ''\n\n      // A chunk of data has been recieved.\n      resp.on('data', (chunk) => {\n        data += chunk\n      })\n\n      // The whole response has been received. Print out the result.\n      resp.on('end', () => {\n        try {\n          if (resp.statusCode == 200) {\n            callback(data)\n          } else {\n            throw data\n          }\n        } catch (e) {\n          throw e\n        }\n      });\n\n    }).on(\"error\", (err) => {\n      throw err;\n    });\n  }\n\n  /***\n   * Run raw search query \n   * \n   * @param [Map] parameter (see: serpapi.com)\n   * @param [Function] callback\n   */\n  search(parameter, output, callback) {\n    this.execute(\"/search\", parameter, callback, output)\n  }\n\n  /***\n   * Provide json search result in the callback\n   *\n   * @param [Map] parameter query\n   * @param [Function] callback with search result as json \n   */\n  json(parameter, callback) {\n    this.search(parameter, \"json\", (data) => {\n      let parsed = JSON.parse(data)\n      callback(parsed)\n    })\n  }\n\n  /***\n   * Provide html search result in the callback\n   *\n   * @param [Map] parameter\n   * @param [Function] callback with json as argument \n   * @param [String] api_key\n   */\n  html(parameter, callback, api_key = null) {\n    this.search(parameter, \"html\", (data) => {\n      callback(data)\n    }, api_key)\n  }\n\n  /***\n   * Location API returns matching location in the callback\n   */\n  location(q, limit, callback) {\n    let query = {\n      q: q,\n      limit: limit\n    }\n    this.execute(LOCATION_API, query, (data) => {\n      callback(JSON.parse(data))\n    }, null, null)\n  }\n\n  /***\n   * Account API returns account information in the callback\n   */\n  account(callback) {\n    this.execute(\"/account\", {}, (data) => {\n      callback(JSON.parse(data))\n    }, null, null)\n  }\n\n  /***\n   * Search Archive API returns search result from the archive\n   * @param search_id previous search result = search_metadata.id\n   * @param callback handle next step\n   * @param api_key user secret key\n   */\n  search_archive(search_id, callback, api_key = null) {\n    this.execute(\"/searches/\" + search_id + \".json\", {}, (data) => {\n      callback(JSON.parse(data))\n    }, null, api_key)\n  }\n}\n\nmodule.exports = SerpApiSearch;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}