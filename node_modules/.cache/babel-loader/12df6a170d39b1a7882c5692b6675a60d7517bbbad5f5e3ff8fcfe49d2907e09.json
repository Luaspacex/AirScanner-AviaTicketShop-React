{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nconst endpoint = process.env.REACT_APP_ENDPOINT || \"\";\n\n// export const regUser = createAsyncThunk(\n//   \"user/regUser\",\n//   async ({ login, password }, { rejectWithValue }) => {\n//     try {\n//       const response = await fetch(\n//         `${endpoint}/users?login=${login}&password=${password}`,\n//         {\n//           method: \"POST\",\n//           body: JSON.stringify({ login, password }),\n//           headers: {\n//             \"Content-Type\": \"application/json\",\n//           },\n//         }\n//       );\n\n//       // if (!response.ok) {\n//       //   throw new Error(\"Server error!\");\n//       // }\n\n//       const data = await response.json();\n\n//       // if (data.length < 1) {\n//       //   throw new Error(\"There is no such user :(\");\n//       // }\n\n//       return data;\n//     } catch (error) {\n//       return rejectWithValue(error);\n//     }\n//   }\n// );\nexport const regUser = createAsyncThunk(\"user/regUser\", async (_ref, _ref2) => {\n  let {\n    uid,\n    login,\n    password,\n    contactNo,\n    cart,\n    name\n  } = _ref;\n  let {\n    rejectWithValue\n  } = _ref2;\n  try {\n    const response = await fetch(`${endpoint}/users`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        uid,\n        name,\n        login,\n        password,\n        contactNo,\n        cart\n      })\n    });\n    if (!response.ok) {\n      throw new Error(\"Server error\");\n    }\n    const data = await response.json();\n    if (data.length < 1) {\n      throw new Error(\"registration wasn't successfull \");\n    }\n    return data[0];\n  } catch (error) {\n    return rejectWithValue(error);\n  }\n});\nexport const authUser = createAsyncThunk(\"user/authUser\", async (_ref3, _ref4) => {\n  let {\n    login,\n    password\n  } = _ref3;\n  let {\n    rejectWithValue\n  } = _ref4;\n  try {\n    const response = await fetch(`${endpoint}/users?login=${login}&password=${password}`);\n    if (!response.ok) {\n      throw new Error(\"Server error!\");\n    }\n    const data = await response.json();\n    if (data.length < 1) {\n      throw new Error(\"There is no such user :(\");\n    }\n    localStorage.setItem(\"userId\", data[0].id);\n    // localStorage.setItem(\"userLogin\", data[0].login);\n    localStorage.setItem(\"userEmail\", data[0].login);\n    return data[0];\n  } catch (error) {\n    return rejectWithValue(error);\n  }\n});\n\n// export const settingsUser = createAsyncThunk(\n//   \"user/settings\",\n\n//   async ({id, email, username, avatar, description }, { rejectWithValue }) => {\n//     let formData = {}\n//     if(email) formData.email = email\n//     if(username) formData.username = username\n//     if(avatar) formData.avatar = avatar\n//     if(description) formData.description = description\n//     try {\n//       const response = await fetch(\n//         `${endpoint}/posts/${id}`,\n//         {\n//           method: \"PATCH\",\n//           // body: JSON.stringify({ login, password }),\n//           headers: {\n//             \"Content-Type\": \"application/json\",\n//           },\n//               body: JSON.stringify(formData),\n//         }\n//       );\n\n//       if (!response.ok) {\n//         throw new Error(\"Server error!\");\n//       }\n\n//       const data = await response.json();\n\n//       if (data.length < 1) {\n//         throw new Error(\"There is no such user :(\");\n//       }\n\n//       return data;\n//     } catch (error) {\n//       return rejectWithValue(error);\n//     }\n//   }\n// );\nexport const changeUser = createAsyncThunk(\"user/changeUser\", async (_ref5, _ref6) => {\n  let {\n    id,\n    login,\n    username,\n    avatar,\n    description\n  } = _ref5;\n  let {\n    rejectWithValue\n  } = _ref6;\n  let formData = {};\n  if (login) formData.login = login;\n\n  // if(username) formData.username = username\n  // if(avatar) formData.avatar = avatar\n  // if(description) formData.description = description\n  try {\n    const response = await fetch(`${endpoint}/users/${localStorage.getItem(\"userId\")}`, {\n      method: \"PATCH\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      // body: JSON.stringify({ email, username, avatar, description }),\n      body: JSON.stringify({\n        formData: {\n          login\n        }\n      })\n    });\n    if (!response.ok) {\n      throw new Error(\"Server error\");\n    }\n    const data = await response.json();\n    console.log(data);\n    if (data.length < 1) {\n      throw new Error(\"couldn't change parameters :(\");\n    }\n    return data[0];\n  } catch (error) {\n    return rejectWithValue(error);\n  }\n});\nconst UserSlice = createSlice({\n  name: \"user\",\n  initialState: {\n    user: {\n      login: \"anime\",\n      password: \"qwerty\"\n    },\n    isLoading: false,\n    error: null\n  },\n  reducers: {\n    dismissError(state) {\n      state.error = null;\n    },\n    logOut(state) {\n      state.user = null;\n    },\n    changeUser(state, action) {\n      state.user = action.payload;\n    }\n  },\n  extraReducers: {\n    [authUser.pending]: state => {\n      state.isLoading = true;\n    },\n    [authUser.rejected]: (state, action) => {\n      state.isLoading = false;\n      state.error = action.payload;\n    },\n    [authUser.fulfilled]: (state, action) => {\n      state.isLoading = false;\n      state.error = null;\n      state.user = action.payload;\n    },\n    [changeUser.pending]: state => {\n      state.isLoading = true;\n    },\n    [changeUser.rejected]: (state, action) => {\n      console.log(action);\n      state.isLoading = false;\n      state.error = action.payload.message;\n    },\n    [changeUser.fulfilled]: (state, action) => {\n      state.isLoading = false;\n      state.error = null;\n      state.user = action.payload;\n    }\n  }\n});\nexport const {\n  auth,\n  logOut,\n  dismissError\n} = UserSlice.actions;\nexport default UserSlice;","map":{"version":3,"names":["createSlice","createAsyncThunk","endpoint","process","env","REACT_APP_ENDPOINT","regUser","_ref","_ref2","uid","login","password","contactNo","cart","name","rejectWithValue","response","fetch","method","headers","body","JSON","stringify","ok","Error","data","json","length","error","authUser","_ref3","_ref4","localStorage","setItem","id","changeUser","_ref5","_ref6","username","avatar","description","formData","getItem","console","log","UserSlice","initialState","user","isLoading","reducers","dismissError","state","logOut","action","payload","extraReducers","pending","rejected","fulfilled","message","auth","actions"],"sources":["/Users/aluabajzanova/Desktop/skylineÂ /src/store/userSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\n\r\nconst endpoint = process.env.REACT_APP_ENDPOINT || \"\";\r\n\r\n// export const regUser = createAsyncThunk(\r\n//   \"user/regUser\",\r\n//   async ({ login, password }, { rejectWithValue }) => {\r\n//     try {\r\n//       const response = await fetch(\r\n//         `${endpoint}/users?login=${login}&password=${password}`,\r\n//         {\r\n//           method: \"POST\",\r\n//           body: JSON.stringify({ login, password }),\r\n//           headers: {\r\n//             \"Content-Type\": \"application/json\",\r\n//           },\r\n//         }\r\n//       );\r\n\r\n//       // if (!response.ok) {\r\n//       //   throw new Error(\"Server error!\");\r\n//       // }\r\n\r\n//       const data = await response.json();\r\n\r\n//       // if (data.length < 1) {\r\n//       //   throw new Error(\"There is no such user :(\");\r\n//       // }\r\n\r\n//       return data;\r\n//     } catch (error) {\r\n//       return rejectWithValue(error);\r\n//     }\r\n//   }\r\n// );\r\nexport const regUser = createAsyncThunk(\r\n  \"user/regUser\",\r\n  async ({uid, login, password ,contactNo,cart,name}, { rejectWithValue }) => {\r\n    try {\r\n      const response = await fetch(`${endpoint}/users`, {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({uid,name, login, password , contactNo, cart}),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error(\"Server error\");\r\n      }\r\n\r\n      const data = await response.json();\r\n\r\n      if (data.length < 1) {\r\n        throw new Error(\"registration wasn't successfull \");\r\n      }\r\n\r\n      return data[0];\r\n    } catch (error) {\r\n      return rejectWithValue(error);\r\n    }\r\n  }\r\n)\r\n\r\nexport const authUser = createAsyncThunk(\r\n  \"user/authUser\",\r\n  async ({ login, password }, { rejectWithValue }) => {\r\n    try {\r\n      const response = await fetch(\r\n        `${endpoint}/users?login=${login}&password=${password}`\r\n      );\r\n\r\n      if (!response.ok) {\r\n        throw new Error(\"Server error!\");\r\n      }\r\n\r\n      const data = await response.json();\r\n      \r\n      if (data.length < 1) {\r\n        throw new Error(\"There is no such user :(\");\r\n      }\r\n      localStorage.setItem(\"userId\", data[0].id);\r\n      // localStorage.setItem(\"userLogin\", data[0].login);\r\n      localStorage.setItem(\"userEmail\",data[0].login)\r\n      return data[0];\r\n    } catch (error) {\r\n      return rejectWithValue(error);\r\n    }\r\n  }\r\n);\r\n\r\n// export const settingsUser = createAsyncThunk(\r\n//   \"user/settings\",\r\n\r\n//   async ({id, email, username, avatar, description }, { rejectWithValue }) => {\r\n//     let formData = {}\r\n//     if(email) formData.email = email\r\n//     if(username) formData.username = username\r\n//     if(avatar) formData.avatar = avatar\r\n//     if(description) formData.description = description\r\n//     try {\r\n//       const response = await fetch(\r\n//         `${endpoint}/posts/${id}`,\r\n//         {\r\n//           method: \"PATCH\",\r\n//           // body: JSON.stringify({ login, password }),\r\n//           headers: {\r\n//             \"Content-Type\": \"application/json\",\r\n//           },\r\n//               body: JSON.stringify(formData),\r\n//         }\r\n//       );\r\n\r\n//       if (!response.ok) {\r\n//         throw new Error(\"Server error!\");\r\n//       }\r\n\r\n//       const data = await response.json();\r\n\r\n//       if (data.length < 1) {\r\n//         throw new Error(\"There is no such user :(\");\r\n//       }\r\n\r\n//       return data;\r\n//     } catch (error) {\r\n//       return rejectWithValue(error);\r\n//     }\r\n//   }\r\n// );\r\nexport const changeUser = createAsyncThunk(\r\n  \"user/changeUser\",\r\n  async ({ id, login, username, avatar, description }, { rejectWithValue }) => {\r\n    let formData = {}\r\n    if(login) formData.login = login\r\n    \r\n    // if(username) formData.username = username\r\n    // if(avatar) formData.avatar = avatar\r\n    // if(description) formData.description = description\r\n    try {\r\n      const response = await fetch(`${endpoint}/users/${localStorage.getItem(\"userId\")}`, {\r\n    \r\n        method: \"PATCH\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        // body: JSON.stringify({ email, username, avatar, description }),\r\n        body: JSON.stringify({formData:{login}}),\r\n      });\r\n      if (!response.ok) {\r\n        throw new Error(\"Server error\");\r\n      }\r\n\r\n      const data = await response.json();\r\n      console.log(data);\r\n\r\n      if (data.length < 1) {\r\n        throw new Error(\"couldn't change parameters :(\");\r\n      }\r\n\r\n      return data[0];\r\n    } catch (error) {\r\n      return rejectWithValue(error);\r\n    }\r\n  }\r\n);\r\nconst UserSlice = createSlice({\r\n  name: \"user\",\r\n  initialState: {\r\n    user: {\r\n      login: \"anime\",\r\n      password: \"qwerty\",\r\n    },\r\n    isLoading: false,\r\n    error: null,\r\n  },\r\n  reducers: {\r\n    dismissError(state) {\r\n      state.error = null;\r\n    },\r\n    logOut(state) {\r\n      state.user = null;\r\n    },\r\n    changeUser(state, action) {\r\n      state.user = action.payload;\r\n    },\r\n  },\r\n  extraReducers: {\r\n    [authUser.pending]: (state) => {\r\n      state.isLoading = true;\r\n    },\r\n    [authUser.rejected]: (state, action) => {\r\n      state.isLoading = false;\r\n      state.error = action.payload;\r\n    },\r\n    [authUser.fulfilled]: (state, action) => {\r\n      state.isLoading = false;\r\n      state.error = null;\r\n      state.user = action.payload;\r\n    },\r\n    [changeUser.pending]: (state) => {\r\n      state.isLoading = true;\r\n    },\r\n    [changeUser.rejected]: (state, action) => {\r\n      console.log(action);\r\n      state.isLoading = false;\r\n      state.error = action.payload.message;\r\n    },\r\n    [changeUser.fulfilled]: (state, action) => {\r\n      state.isLoading = false;\r\n      state.error = null;\r\n      state.user = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { auth, logOut, dismissError } = UserSlice.actions;\r\n\r\nexport default UserSlice;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}