{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nconst endpoint = process.env.REACT_APP_ENDPOINT || \"\";\n\n// export const regUser = createAsyncThunk(\n//   \"user/regUser\",\n//   async ({ login, password }, { rejectWithValue }) => {\n//     try {\n//       const response = await fetch(\n//         `${endpoint}/users?login=${login}&password=${password}`,\n//         {\n//           method: \"POST\",\n//           body: JSON.stringify({ login, password }),\n//           headers: {\n//             \"Content-Type\": \"application/json\",\n//           },\n//         }\n//       );\n\n//       // if (!response.ok) {\n//       //   throw new Error(\"Server error!\");\n//       // }\n\n//       const data = await response.json();\n\n//       // if (data.length < 1) {\n//       //   throw new Error(\"There is no such user :(\");\n//       // }\n\n//       return data;\n//     } catch (error) {\n//       return rejectWithValue(error);\n//     }\n//   }\n// );\n\nexport const authUser = createAsyncThunk(\"user/authUser\", async (_ref, _ref2) => {\n  let {\n    login,\n    password\n  } = _ref;\n  let {\n    rejectWithValue\n  } = _ref2;\n  try {\n    const response = await fetch(`${endpoint}/users?login=${login}&password=${password}`);\n    if (!response.ok) {\n      throw new Error(\"Server error!\");\n    }\n    const data = await response.json();\n    if (data.length < 1) {\n      throw new Error(\"There is no such user :(\");\n    }\n    return data[0];\n  } catch (error) {\n    return rejectWithValue(error);\n  }\n});\nexport const settingsUser = createAsyncThunk(\"user/settings\", async (_ref3, _ref4) => {\n  let {\n    id,\n    email,\n    username,\n    avatar,\n    description\n  } = _ref3;\n  let {\n    rejectWithValue\n  } = _ref4;\n  let formData = {};\n  if (email) formData.email = email;\n  if (username) formData.username = username;\n  if (avatar) formData.avatar = avatar;\n  if (description) formData.description = description;\n  try {\n    const response = await fetch(`${endpoint}/posts/${id}`, {\n      method: \"PATCH\",\n      // body: JSON.stringify({ login, password }),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(formData)\n    });\n    if (!response.ok) {\n      throw new Error(\"Server error!\");\n    }\n    const data = await response.json();\n    if (data.length < 1) {\n      throw new Error(\"There is no such user :(\");\n    }\n    return data;\n  } catch (error) {\n    return rejectWithValue(error);\n  }\n});\nconst UserSlice = createSlice({\n  name: \"user\",\n  initialState: {\n    user: {\n      login: \"anime\",\n      password: \"qwerty\"\n    },\n    isLoading: false,\n    error: null\n  },\n  reducers: {\n    dismissError(state) {\n      state.error = null;\n    },\n    logOut(state) {\n      state.user = null;\n    },\n    changeUser(state, action) {\n      state.user.name = action.payload;\n    }\n  },\n  extraReducers: {\n    [authUser.pending]: state => {\n      state.isLoading = true;\n    },\n    [authUser.rejected]: (state, action) => {\n      state.isLoading = false;\n      state.error = action.payload;\n    },\n    [authUser.fulfilled]: (state, action) => {\n      state.isLoading = false;\n      state.error = null;\n      state.user = action.payload;\n    }\n  }\n});\nexport const {\n  auth,\n  logOut,\n  dismissError,\n  changeUser\n} = UserSlice.actions;\nexport default UserSlice;","map":{"version":3,"names":["createSlice","createAsyncThunk","endpoint","process","env","REACT_APP_ENDPOINT","authUser","_ref","_ref2","login","password","rejectWithValue","response","fetch","ok","Error","data","json","length","error","settingsUser","_ref3","_ref4","id","email","username","avatar","description","formData","method","headers","body","JSON","stringify","UserSlice","name","initialState","user","isLoading","reducers","dismissError","state","logOut","changeUser","action","payload","extraReducers","pending","rejected","fulfilled","auth","actions"],"sources":["/Users/aluabajzanova/Desktop/skylineÂ /src/store/userSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\n\r\nconst endpoint = process.env.REACT_APP_ENDPOINT || \"\";\r\n\r\n// export const regUser = createAsyncThunk(\r\n//   \"user/regUser\",\r\n//   async ({ login, password }, { rejectWithValue }) => {\r\n//     try {\r\n//       const response = await fetch(\r\n//         `${endpoint}/users?login=${login}&password=${password}`,\r\n//         {\r\n//           method: \"POST\",\r\n//           body: JSON.stringify({ login, password }),\r\n//           headers: {\r\n//             \"Content-Type\": \"application/json\",\r\n//           },\r\n//         }\r\n//       );\r\n\r\n//       // if (!response.ok) {\r\n//       //   throw new Error(\"Server error!\");\r\n//       // }\r\n\r\n//       const data = await response.json();\r\n\r\n//       // if (data.length < 1) {\r\n//       //   throw new Error(\"There is no such user :(\");\r\n//       // }\r\n\r\n//       return data;\r\n//     } catch (error) {\r\n//       return rejectWithValue(error);\r\n//     }\r\n//   }\r\n// );\r\n\r\nexport const authUser = createAsyncThunk(\r\n  \"user/authUser\",\r\n  async ({ login, password }, { rejectWithValue }) => {\r\n    try {\r\n      const response = await fetch(\r\n        `${endpoint}/users?login=${login}&password=${password}`\r\n      );\r\n\r\n      if (!response.ok) {\r\n        throw new Error(\"Server error!\");\r\n      }\r\n\r\n      const data = await response.json();\r\n\r\n      if (data.length < 1) {\r\n        throw new Error(\"There is no such user :(\");\r\n      }\r\n\r\n      return data[0];\r\n    } catch (error) {\r\n      return rejectWithValue(error);\r\n    }\r\n  }\r\n);\r\n\r\nexport const settingsUser = createAsyncThunk(\r\n  \"user/settings\",\r\n\r\n  async ({id, email, username, avatar, description }, { rejectWithValue }) => {\r\n    let formData = {}\r\n    if(email) formData.email = email\r\n    if(username) formData.username = username\r\n    if(avatar) formData.avatar = avatar\r\n    if(description) formData.description = description\r\n    try {\r\n      const response = await fetch(\r\n        `${endpoint}/posts/${id}`,\r\n        {\r\n          method: \"PATCH\",\r\n          // body: JSON.stringify({ login, password }),\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n              body: JSON.stringify(formData),\r\n        }\r\n      );\r\n\r\n      if (!response.ok) {\r\n        throw new Error(\"Server error!\");\r\n      }\r\n\r\n      const data = await response.json();\r\n\r\n      if (data.length < 1) {\r\n        throw new Error(\"There is no such user :(\");\r\n      }\r\n\r\n      return data;\r\n    } catch (error) {\r\n      return rejectWithValue(error);\r\n    }\r\n  }\r\n);\r\nconst UserSlice = createSlice({\r\n  name: \"user\",\r\n  initialState: {\r\n    user: {\r\n      login: \"anime\",\r\n      password: \"qwerty\",\r\n    },\r\n    isLoading: false,\r\n    error: null,\r\n  },\r\n  reducers: {\r\n    dismissError(state) {\r\n      state.error = null;\r\n    },\r\n    logOut(state) {\r\n      state.user = null;\r\n    },\r\n    changeUser(state, action) {\r\n      state.user.name = action.payload;\r\n    },\r\n  },\r\n  extraReducers: {\r\n    [authUser.pending]: (state) => {\r\n      state.isLoading = true;\r\n    },\r\n    [authUser.rejected]: (state, action) => {\r\n      state.isLoading = false;\r\n      state.error = action.payload;\r\n    },\r\n    [authUser.fulfilled]: (state, action) => {\r\n      state.isLoading = false;\r\n      state.error = null;\r\n      state.user = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { auth, logOut, dismissError, changeUser } = UserSlice.actions;\r\n\r\nexport default UserSlice;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}