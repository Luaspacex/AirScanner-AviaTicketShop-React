{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nconst endpoint = process.env.REACT_APP_ENDPOINT || \"\";\nexport const getPost = createAsyncThunk(\"post/getPost\", async (id, _ref) => {\n  let {\n    rejectWithValue\n  } = _ref;\n  try {\n    const response = await fetch(`${endpoint}/posts?id=${id}`);\n    if (!response.ok) {\n      throw new Error(\"Server error!\");\n    }\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    return rejectWithValue(error);\n  }\n});\nconst PostSlice = createSlice({\n  name: \"post\",\n  initialState: {\n    post: [],\n    isLoading: false,\n    error: null\n  },\n  reducers: {},\n  extraReducers: {\n    [getPost.pending]: state => {\n      state.isLoading = true;\n    },\n    [getPost.rejected]: (state, action) => {\n      state.isLoading = false;\n      state.error = action.payload;\n    },\n    [getPost.fulfilled]: (state, action) => {\n      state.isLoading = false;\n      state.error = null;\n      state.post = action.payload;\n    }\n  }\n});\nexport default PostSlice;","map":{"version":3,"names":["createSlice","createAsyncThunk","endpoint","process","env","REACT_APP_ENDPOINT","getPost","id","_ref","rejectWithValue","response","fetch","ok","Error","data","json","error","PostSlice","name","initialState","post","isLoading","reducers","extraReducers","pending","state","rejected","action","payload","fulfilled"],"sources":["/Users/aluabajzanova/Desktop/examreact/src/store/postSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\n\nconst endpoint = process.env.REACT_APP_ENDPOINT || \"\";\n\nexport const getPost = createAsyncThunk(\n  \"post/getPost\",\n  async (id, { rejectWithValue }) => {\n    try {\n      const response = await fetch(`${endpoint}/posts?id=${id}`);\n\n      if (!response.ok) {\n        throw new Error(\"Server error!\");\n      }\n\n      const data = await response.json();\n\n      return data;\n    } catch (error) {\n      return rejectWithValue(error);\n    }\n  }\n);\n\nconst PostSlice = createSlice({\n  name: \"post\",\n  initialState: {\n    post: [],\n    isLoading: false,\n    error: null,\n  },\n  reducers: {},\n  extraReducers: {\n    [getPost.pending]: (state) => {\n      state.isLoading = true;\n    },\n    [getPost.rejected]: (state, action) => {\n      state.isLoading = false;\n      state.error = action.payload;\n    },\n    [getPost.fulfilled]: (state, action) => {\n      state.isLoading = false;\n      state.error = null;\n      state.post = action.payload;\n    },\n  },\n});\n\nexport default PostSlice;\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,gBAAgB,QAAQ,kBAAkB;AAEhE,MAAMC,QAAQ,GAAGC,OAAO,CAACC,GAAG,CAACC,kBAAkB,IAAI,EAAE;AAErD,OAAO,MAAMC,OAAO,GAAGL,gBAAgB,CACrC,cAAc,EACd,OAAOM,EAAE,EAAAC,IAAA,KAA0B;EAAA,IAAxB;IAAEC;EAAgB,CAAC,GAAAD,IAAA;EAC5B,IAAI;IACF,MAAME,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAET,QAAS,aAAYK,EAAG,EAAC,CAAC;IAE1D,IAAI,CAACG,QAAQ,CAACE,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAAC,eAAe,CAAC;IAClC;IAEA,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,EAAE;IAElC,OAAOD,IAAI;EACb,CAAC,CAAC,OAAOE,KAAK,EAAE;IACd,OAAOP,eAAe,CAACO,KAAK,CAAC;EAC/B;AACF,CAAC,CACF;AAED,MAAMC,SAAS,GAAGjB,WAAW,CAAC;EAC5BkB,IAAI,EAAE,MAAM;EACZC,YAAY,EAAE;IACZC,IAAI,EAAE,EAAE;IACRC,SAAS,EAAE,KAAK;IAChBL,KAAK,EAAE;EACT,CAAC;EACDM,QAAQ,EAAE,CAAC,CAAC;EACZC,aAAa,EAAE;IACb,CAACjB,OAAO,CAACkB,OAAO,GAAIC,KAAK,IAAK;MAC5BA,KAAK,CAACJ,SAAS,GAAG,IAAI;IACxB,CAAC;IACD,CAACf,OAAO,CAACoB,QAAQ,GAAG,CAACD,KAAK,EAAEE,MAAM,KAAK;MACrCF,KAAK,CAACJ,SAAS,GAAG,KAAK;MACvBI,KAAK,CAACT,KAAK,GAAGW,MAAM,CAACC,OAAO;IAC9B,CAAC;IACD,CAACtB,OAAO,CAACuB,SAAS,GAAG,CAACJ,KAAK,EAAEE,MAAM,KAAK;MACtCF,KAAK,CAACJ,SAAS,GAAG,KAAK;MACvBI,KAAK,CAACT,KAAK,GAAG,IAAI;MAClBS,KAAK,CAACL,IAAI,GAAGO,MAAM,CAACC,OAAO;IAC7B;EACF;AACF,CAAC,CAAC;AAEF,eAAeX,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}