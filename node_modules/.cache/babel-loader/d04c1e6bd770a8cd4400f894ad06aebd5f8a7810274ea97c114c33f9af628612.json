{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nconst endpoint = process.env.REACT_APP_ENDPOINT || \"\";\nexport const regUser = createAsyncThunk(\"user/regUser\", async (_ref, _ref2) => {\n  let {\n    login,\n    password\n  } = _ref;\n  let {\n    rejectWithValue\n  } = _ref2;\n  try {\n    const response = await fetch(`${endpoint}/users?login=${login}&password=${password}`, {\n      method: \"POST\",\n      body: JSON.stringify({\n        login,\n        password\n      }),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n\n    // if (!response.ok) {\n    //   throw new Error(\"Server error!\");\n    // }\n\n    const data = await response.json();\n\n    // if (data.length < 1) {\n    //   throw new Error(\"There is no such user :(\");\n    // }\n\n    return data;\n  } catch (error) {\n    return rejectWithValue(error);\n  }\n});\nexport const authUser = createAsyncThunk(\"user/authUser\", async (_ref3, _ref4) => {\n  let {\n    login,\n    password\n  } = _ref3;\n  let {\n    rejectWithValue\n  } = _ref4;\n  try {\n    const response = await fetch(`${endpoint}/users?login=${login}&password=${password}`);\n    if (!response.ok) {\n      throw new Error(\"Server error!\");\n    }\n    const data = await response.json();\n    if (data.length < 1) {\n      throw new Error(\"There is no such user :(\");\n    }\n    return data[0];\n  } catch (error) {\n    return rejectWithValue(error);\n  }\n});\nexport const settingsUser = createAsyncThunk(\"user/settings\", async (_ref5, _ref6) => {\n  let {\n    login,\n    password\n  } = _ref5;\n  let {\n    rejectWithValue\n  } = _ref6;\n  try {\n    const response = await fetch(`${endpoint}/users?login=${login}&password=${password}`, {\n      method: \"PUT\",\n      body: JSON.stringify({\n        login,\n        password\n      }),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n\n    // if (!response.ok) {\n    //   throw new Error(\"Server error!\");\n    // }\n\n    const data = await response.json();\n\n    // if (data.length < 1) {\n    //   throw new Error(\"There is no such user :(\");\n    // }\n\n    return data;\n  } catch (error) {\n    return rejectWithValue(error);\n  }\n});\nconst UserSlice = createSlice({\n  name: \"user\",\n  initialState: {\n    user: {\n      login: \"anime\",\n      password: \"qwerty\"\n    },\n    isLoading: false,\n    error: null\n  },\n  reducers: {\n    dismissError(state) {\n      state.error = null;\n    },\n    logOut(state) {\n      state.user = null;\n    },\n    changeUser(state, action) {\n      state.user.name = action.payload;\n    }\n  },\n  extraReducers: {\n    [authUser.pending]: state => {\n      state.isLoading = true;\n    },\n    [authUser.rejected]: (state, action) => {\n      state.isLoading = false;\n      state.error = action.payload;\n    },\n    [authUser.fulfilled]: (state, action) => {\n      state.isLoading = false;\n      state.error = null;\n      state.user = action.payload;\n    }\n  }\n});\nexport const {\n  auth,\n  logOut,\n  dismissError,\n  changeUser\n} = UserSlice.actions;\nexport default UserSlice;","map":{"version":3,"names":["createSlice","createAsyncThunk","endpoint","process","env","REACT_APP_ENDPOINT","regUser","_ref","_ref2","login","password","rejectWithValue","response","fetch","method","body","JSON","stringify","headers","data","json","error","authUser","_ref3","_ref4","ok","Error","length","settingsUser","_ref5","_ref6","UserSlice","name","initialState","user","isLoading","reducers","dismissError","state","logOut","changeUser","action","payload","extraReducers","pending","rejected","fulfilled","auth","actions"],"sources":["/Users/aluabajzanova/Desktop/examreactÂ /src/store/userSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\n\r\nconst endpoint = process.env.REACT_APP_ENDPOINT || \"\";\r\n\r\nexport const regUser = createAsyncThunk(\r\n  \"user/regUser\",\r\n  async ({ login, password }, { rejectWithValue }) => {\r\n    try {\r\n      const response = await fetch(\r\n        `${endpoint}/users?login=${login}&password=${password}`,\r\n        {\r\n          method: \"POST\",\r\n          body: JSON.stringify({ login, password }),\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        }\r\n      );\r\n\r\n      // if (!response.ok) {\r\n      //   throw new Error(\"Server error!\");\r\n      // }\r\n\r\n      const data = await response.json();\r\n\r\n      // if (data.length < 1) {\r\n      //   throw new Error(\"There is no such user :(\");\r\n      // }\r\n\r\n      return data;\r\n    } catch (error) {\r\n      return rejectWithValue(error);\r\n    }\r\n  }\r\n);\r\n\r\nexport const authUser = createAsyncThunk(\r\n  \"user/authUser\",\r\n  async ({ login, password }, { rejectWithValue }) => {\r\n    try {\r\n      const response = await fetch(\r\n        `${endpoint}/users?login=${login}&password=${password}`\r\n      );\r\n\r\n      if (!response.ok) {\r\n        throw new Error(\"Server error!\");\r\n      }\r\n\r\n      const data = await response.json();\r\n\r\n      if (data.length < 1) {\r\n        throw new Error(\"There is no such user :(\");\r\n      }\r\n\r\n      return data[0];\r\n    } catch (error) {\r\n      return rejectWithValue(error);\r\n    }\r\n  }\r\n);\r\n\r\nexport const settingsUser = createAsyncThunk(\r\n  \"user/settings\",\r\n  async ({ login, password }, { rejectWithValue }) => {\r\n    try {\r\n      const response = await fetch(\r\n        `${endpoint}/users?login=${login}&password=${password}`,\r\n        {\r\n          method: \"PUT\",\r\n          body: JSON.stringify({ login, password }),\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        }\r\n      );\r\n\r\n      // if (!response.ok) {\r\n      //   throw new Error(\"Server error!\");\r\n      // }\r\n\r\n      const data = await response.json();\r\n\r\n      // if (data.length < 1) {\r\n      //   throw new Error(\"There is no such user :(\");\r\n      // }\r\n\r\n      return data;\r\n    } catch (error) {\r\n      return rejectWithValue(error);\r\n    }\r\n  }\r\n);\r\nconst UserSlice = createSlice({\r\n  name: \"user\",\r\n  initialState: {\r\n    user: {\r\n      login: \"anime\",\r\n      password: \"qwerty\",\r\n    },\r\n    isLoading: false,\r\n    error: null,\r\n  },\r\n  reducers: {\r\n    dismissError(state) {\r\n      state.error = null;\r\n    },\r\n    logOut(state) {\r\n      state.user = null;\r\n    },\r\n    changeUser(state, action) {\r\n      state.user.name = action.payload;\r\n    },\r\n  },\r\n  extraReducers: {\r\n    [authUser.pending]: (state) => {\r\n      state.isLoading = true;\r\n    },\r\n    [authUser.rejected]: (state, action) => {\r\n      state.isLoading = false;\r\n      state.error = action.payload;\r\n    },\r\n    [authUser.fulfilled]: (state, action) => {\r\n      state.isLoading = false;\r\n      state.error = null;\r\n      state.user = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { auth, logOut, dismissError, changeUser } = UserSlice.actions;\r\n\r\nexport default UserSlice;\r\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,gBAAgB,QAAQ,kBAAkB;AAEhE,MAAMC,QAAQ,GAAGC,OAAO,CAACC,GAAG,CAACC,kBAAkB,IAAI,EAAE;AAErD,OAAO,MAAMC,OAAO,GAAGL,gBAAgB,CACrC,cAAc,EACd,OAAAM,IAAA,EAAAC,KAAA,KAAoD;EAAA,IAA7C;IAAEC,KAAK;IAAEC;EAAS,CAAC,GAAAH,IAAA;EAAA,IAAE;IAAEI;EAAgB,CAAC,GAAAH,KAAA;EAC7C,IAAI;IACF,MAAMI,QAAQ,GAAG,MAAMC,KAAK,CACzB,GAAEX,QAAS,gBAAeO,KAAM,aAAYC,QAAS,EAAC,EACvD;MACEI,MAAM,EAAE,MAAM;MACdC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAER,KAAK;QAAEC;MAAS,CAAC,CAAC;MACzCQ,OAAO,EAAE;QACP,cAAc,EAAE;MAClB;IACF,CAAC,CACF;;IAED;IACA;IACA;;IAEA,MAAMC,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAI,EAAE;;IAElC;IACA;IACA;;IAEA,OAAOD,IAAI;EACb,CAAC,CAAC,OAAOE,KAAK,EAAE;IACd,OAAOV,eAAe,CAACU,KAAK,CAAC;EAC/B;AACF,CAAC,CACF;AAED,OAAO,MAAMC,QAAQ,GAAGrB,gBAAgB,CACtC,eAAe,EACf,OAAAsB,KAAA,EAAAC,KAAA,KAAoD;EAAA,IAA7C;IAAEf,KAAK;IAAEC;EAAS,CAAC,GAAAa,KAAA;EAAA,IAAE;IAAEZ;EAAgB,CAAC,GAAAa,KAAA;EAC7C,IAAI;IACF,MAAMZ,QAAQ,GAAG,MAAMC,KAAK,CACzB,GAAEX,QAAS,gBAAeO,KAAM,aAAYC,QAAS,EAAC,CACxD;IAED,IAAI,CAACE,QAAQ,CAACa,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAAC,eAAe,CAAC;IAClC;IAEA,MAAMP,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAI,EAAE;IAElC,IAAID,IAAI,CAACQ,MAAM,GAAG,CAAC,EAAE;MACnB,MAAM,IAAID,KAAK,CAAC,0BAA0B,CAAC;IAC7C;IAEA,OAAOP,IAAI,CAAC,CAAC,CAAC;EAChB,CAAC,CAAC,OAAOE,KAAK,EAAE;IACd,OAAOV,eAAe,CAACU,KAAK,CAAC;EAC/B;AACF,CAAC,CACF;AAED,OAAO,MAAMO,YAAY,GAAG3B,gBAAgB,CAC1C,eAAe,EACf,OAAA4B,KAAA,EAAAC,KAAA,KAAoD;EAAA,IAA7C;IAAErB,KAAK;IAAEC;EAAS,CAAC,GAAAmB,KAAA;EAAA,IAAE;IAAElB;EAAgB,CAAC,GAAAmB,KAAA;EAC7C,IAAI;IACF,MAAMlB,QAAQ,GAAG,MAAMC,KAAK,CACzB,GAAEX,QAAS,gBAAeO,KAAM,aAAYC,QAAS,EAAC,EACvD;MACEI,MAAM,EAAE,KAAK;MACbC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAER,KAAK;QAAEC;MAAS,CAAC,CAAC;MACzCQ,OAAO,EAAE;QACP,cAAc,EAAE;MAClB;IACF,CAAC,CACF;;IAED;IACA;IACA;;IAEA,MAAMC,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAI,EAAE;;IAElC;IACA;IACA;;IAEA,OAAOD,IAAI;EACb,CAAC,CAAC,OAAOE,KAAK,EAAE;IACd,OAAOV,eAAe,CAACU,KAAK,CAAC;EAC/B;AACF,CAAC,CACF;AACD,MAAMU,SAAS,GAAG/B,WAAW,CAAC;EAC5BgC,IAAI,EAAE,MAAM;EACZC,YAAY,EAAE;IACZC,IAAI,EAAE;MACJzB,KAAK,EAAE,OAAO;MACdC,QAAQ,EAAE;IACZ,CAAC;IACDyB,SAAS,EAAE,KAAK;IAChBd,KAAK,EAAE;EACT,CAAC;EACDe,QAAQ,EAAE;IACRC,YAAYA,CAACC,KAAK,EAAE;MAClBA,KAAK,CAACjB,KAAK,GAAG,IAAI;IACpB,CAAC;IACDkB,MAAMA,CAACD,KAAK,EAAE;MACZA,KAAK,CAACJ,IAAI,GAAG,IAAI;IACnB,CAAC;IACDM,UAAUA,CAACF,KAAK,EAAEG,MAAM,EAAE;MACxBH,KAAK,CAACJ,IAAI,CAACF,IAAI,GAAGS,MAAM,CAACC,OAAO;IAClC;EACF,CAAC;EACDC,aAAa,EAAE;IACb,CAACrB,QAAQ,CAACsB,OAAO,GAAIN,KAAK,IAAK;MAC7BA,KAAK,CAACH,SAAS,GAAG,IAAI;IACxB,CAAC;IACD,CAACb,QAAQ,CAACuB,QAAQ,GAAG,CAACP,KAAK,EAAEG,MAAM,KAAK;MACtCH,KAAK,CAACH,SAAS,GAAG,KAAK;MACvBG,KAAK,CAACjB,KAAK,GAAGoB,MAAM,CAACC,OAAO;IAC9B,CAAC;IACD,CAACpB,QAAQ,CAACwB,SAAS,GAAG,CAACR,KAAK,EAAEG,MAAM,KAAK;MACvCH,KAAK,CAACH,SAAS,GAAG,KAAK;MACvBG,KAAK,CAACjB,KAAK,GAAG,IAAI;MAClBiB,KAAK,CAACJ,IAAI,GAAGO,MAAM,CAACC,OAAO;IAC7B;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEK,IAAI;EAAER,MAAM;EAAEF,YAAY;EAAEG;AAAW,CAAC,GAAGT,SAAS,CAACiB,OAAO;AAE3E,eAAejB,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}