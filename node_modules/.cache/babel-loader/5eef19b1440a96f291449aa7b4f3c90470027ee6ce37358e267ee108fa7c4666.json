{"ast":null,"code":"// import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\n\n// const endpoint = process.env.REACT_APP_ENDPOINT || \"\";\n\n// export const getPosts = createAsyncThunk(\n//   \"posts/getPosts\",\n//   async ({ limit, page }, { rejectWithValue /*, dispatch, getState*/ }) => {\n//     try {\n//       const response = await fetch(\n//         `${endpoint}/posts?_page=${page}&_limit=${limit}&_expand=user`\n//       );\n\n//       if (!response.ok) {\n//         throw new Error(\"Server error!\");\n//       }\n\n//       const data = await response.json();\n\n//       return data;\n//     } catch (error) {\n//       return rejectWithValue(error);\n//     }\n//   }\n// );\n\n// export const createPosts = createAsyncThunk(\n//   \"posts/createPosts\",\n//   async ({ image, title, text }, { rejectWithValue /*, dispatch, getState*/ }) => {\n//     try {\n//       const response = await fetch(\n//         `${endpoint}/posts?_image=${image}&_title=${title}&_text=${text}&_expand=user`\n//       );\n\n//       if (!response.ok) {\n//         throw new Error(\"Server error!\");\n//       }\n//       const data = await response.json();\n\n//       return data;\n//     } catch (error) {\n//       return rejectWithValue(error);\n//     }\n//   }\n// );\n\n// const PostsSlice = createSlice({\n//   name: \"posts\",\n//   initialState: {\n//     posts: [],\n//     isLoading: false,\n//     error: null,\n//   },\n//   reducers: {\n//   },\n//   extraReducers: {\n//     [getPosts.pending]: (state) => {\n//       state.isLoading = true;\n//     },\n//     [getPosts.rejected]: (state, action) => {\n//       state.isLoading = false;\n//       state.error = action.payload;\n//     },\n//     [getPosts.fulfilled]: (state, action) => {\n//       state.isLoading = false;\n//       state.error = null;\n//       state.posts = action.payload;\n//     },\n//   },\n// });\n\n// export default PostsSlice;","map":{"version":3,"names":[],"sources":["/Users/aluabajzanova/Desktop/examreactÂ /src/store/postsSlice.js"],"sourcesContent":["// import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\n\r\n// const endpoint = process.env.REACT_APP_ENDPOINT || \"\";\r\n\r\n// export const getPosts = createAsyncThunk(\r\n//   \"posts/getPosts\",\r\n//   async ({ limit, page }, { rejectWithValue /*, dispatch, getState*/ }) => {\r\n//     try {\r\n//       const response = await fetch(\r\n//         `${endpoint}/posts?_page=${page}&_limit=${limit}&_expand=user`\r\n//       );\r\n\r\n//       if (!response.ok) {\r\n//         throw new Error(\"Server error!\");\r\n//       }\r\n\r\n//       const data = await response.json();\r\n\r\n//       return data;\r\n//     } catch (error) {\r\n//       return rejectWithValue(error);\r\n//     }\r\n//   }\r\n// );\r\n\r\n// export const createPosts = createAsyncThunk(\r\n//   \"posts/createPosts\",\r\n//   async ({ image, title, text }, { rejectWithValue /*, dispatch, getState*/ }) => {\r\n//     try {\r\n//       const response = await fetch(\r\n//         `${endpoint}/posts?_image=${image}&_title=${title}&_text=${text}&_expand=user`\r\n//       );\r\n\r\n//       if (!response.ok) {\r\n//         throw new Error(\"Server error!\");\r\n//       }\r\n//       const data = await response.json();\r\n\r\n//       return data;\r\n//     } catch (error) {\r\n//       return rejectWithValue(error);\r\n//     }\r\n//   }\r\n// );\r\n\r\n\r\n\r\n// const PostsSlice = createSlice({\r\n//   name: \"posts\",\r\n//   initialState: {\r\n//     posts: [],\r\n//     isLoading: false,\r\n//     error: null,\r\n//   },\r\n//   reducers: {\r\n//   },\r\n//   extraReducers: {\r\n//     [getPosts.pending]: (state) => {\r\n//       state.isLoading = true;\r\n//     },\r\n//     [getPosts.rejected]: (state, action) => {\r\n//       state.isLoading = false;\r\n//       state.error = action.payload;\r\n//     },\r\n//     [getPosts.fulfilled]: (state, action) => {\r\n//       state.isLoading = false;\r\n//       state.error = null;\r\n//       state.posts = action.payload;\r\n//     },\r\n//   },\r\n// });\r\n\r\n// export default PostsSlice;\r\n"],"mappings":"AAAA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}