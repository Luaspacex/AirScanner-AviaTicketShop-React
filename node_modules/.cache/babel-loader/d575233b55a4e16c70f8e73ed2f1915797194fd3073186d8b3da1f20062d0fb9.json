{"ast":null,"code":"// import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\n\n// const endpoint = process.env.REACT_APP_ENDPOINT || \"\";\n\n// export const getPost = createAsyncThunk(\n//   \"post/getPost\",\n//   async (id, { rejectWithValue }) => {\n//     try {\n//       const response = await fetch(`${endpoint}/posts?id=${id}`);\n\n//       if (!response.ok) {\n//         throw new Error(\"Server error!\");\n//       }\n\n//       const data = await response.json();\n\n//       return data;\n//     } catch (error) {\n//       return rejectWithValue(error);\n//     }\n//   }\n// );\n\n// const PostSlice = createSlice({\n//   name: \"post\",\n//   initialState: {\n//     post: {},\n//     isLoading: false,\n//     error: null,\n//   },\n//   reducers: {},\n//   extraReducers: {\n//     [getPost.pending]: (state) => {\n//       state.isLoading = true;\n//     },\n//     [getPost.rejected]: (state, action) => {\n//       state.isLoading = false;\n//       state.error = action.payload;\n//     },\n//     [getPost.fulfilled]: (state, action) => {\n//       state.isLoading = false;\n//       state.error = null;\n//       state.post = action.payload;\n//     },\n//   },\n// });\n\n// export default PostSlice;","map":{"version":3,"names":[],"sources":["/Users/aluabajzanova/Desktop/examreactÂ /src/store/postSlice.js"],"sourcesContent":["// import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\n\n// const endpoint = process.env.REACT_APP_ENDPOINT || \"\";\n\n// export const getPost = createAsyncThunk(\n//   \"post/getPost\",\n//   async (id, { rejectWithValue }) => {\n//     try {\n//       const response = await fetch(`${endpoint}/posts?id=${id}`);\n\n//       if (!response.ok) {\n//         throw new Error(\"Server error!\");\n//       }\n\n//       const data = await response.json();\n\n//       return data;\n//     } catch (error) {\n//       return rejectWithValue(error);\n//     }\n//   }\n// );\n\n\n// const PostSlice = createSlice({\n//   name: \"post\",\n//   initialState: {\n//     post: {},\n//     isLoading: false,\n//     error: null,\n//   },\n//   reducers: {},\n//   extraReducers: {\n//     [getPost.pending]: (state) => {\n//       state.isLoading = true;\n//     },\n//     [getPost.rejected]: (state, action) => {\n//       state.isLoading = false;\n//       state.error = action.payload;\n//     },\n//     [getPost.fulfilled]: (state, action) => {\n//       state.isLoading = false;\n//       state.error = null;\n//       state.post = action.payload;\n//     },\n//   },\n// });\n\n// export default PostSlice;\n"],"mappings":"AAAA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}