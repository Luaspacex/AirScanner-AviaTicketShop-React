{"ast":null,"code":"'use strict';\n\nconst {\n  MockNotMatchedError\n} = require('./mock-errors');\nconst {\n  kDispatches,\n  kMockAgent,\n  kOriginalDispatch,\n  kOrigin,\n  kGetNetConnect\n} = require('./mock-symbols');\nconst {\n  buildURL,\n  nop\n} = require('../core/util');\nconst {\n  STATUS_CODES\n} = require('http');\nconst {\n  types: {\n    isPromise\n  }\n} = require('util');\nfunction matchValue(match, value) {\n  if (typeof match === 'string') {\n    return match === value;\n  }\n  if (match instanceof RegExp) {\n    return match.test(value);\n  }\n  if (typeof match === 'function') {\n    return match(value) === true;\n  }\n  return false;\n}\nfunction lowerCaseEntries(headers) {\n  return Object.fromEntries(Object.entries(headers).map(_ref => {\n    let [headerName, headerValue] = _ref;\n    return [headerName.toLocaleLowerCase(), headerValue];\n  }));\n}\n\n/**\n * @param {import('../../index').Headers|string[]|Record<string, string>} headers\n * @param {string} key\n */\nfunction getHeaderByName(headers, key) {\n  if (Array.isArray(headers)) {\n    for (let i = 0; i < headers.length; i += 2) {\n      if (headers[i].toLocaleLowerCase() === key.toLocaleLowerCase()) {\n        return headers[i + 1];\n      }\n    }\n    return undefined;\n  } else if (typeof headers.get === 'function') {\n    return headers.get(key);\n  } else {\n    return lowerCaseEntries(headers)[key.toLocaleLowerCase()];\n  }\n}\n\n/** @param {string[]} headers */\nfunction buildHeadersFromArray(headers) {\n  // fetch HeadersList\n  const clone = headers.slice();\n  const entries = [];\n  for (let index = 0; index < clone.length; index += 2) {\n    entries.push([clone[index], clone[index + 1]]);\n  }\n  return Object.fromEntries(entries);\n}\nfunction matchHeaders(mockDispatch, headers) {\n  if (typeof mockDispatch.headers === 'function') {\n    if (Array.isArray(headers)) {\n      // fetch HeadersList\n      headers = buildHeadersFromArray(headers);\n    }\n    return mockDispatch.headers(headers ? lowerCaseEntries(headers) : {});\n  }\n  if (typeof mockDispatch.headers === 'undefined') {\n    return true;\n  }\n  if (typeof headers !== 'object' || typeof mockDispatch.headers !== 'object') {\n    return false;\n  }\n  for (const [matchHeaderName, matchHeaderValue] of Object.entries(mockDispatch.headers)) {\n    const headerValue = getHeaderByName(headers, matchHeaderName);\n    if (!matchValue(matchHeaderValue, headerValue)) {\n      return false;\n    }\n  }\n  return true;\n}\nfunction safeUrl(path) {\n  if (typeof path !== 'string') {\n    return path;\n  }\n  const pathSegments = path.split('?');\n  if (pathSegments.length !== 2) {\n    return path;\n  }\n  const qp = new URLSearchParams(pathSegments.pop());\n  qp.sort();\n  return [...pathSegments, qp.toString()].join('?');\n}\nfunction matchKey(mockDispatch, _ref2) {\n  let {\n    path,\n    method,\n    body,\n    headers\n  } = _ref2;\n  const pathMatch = matchValue(mockDispatch.path, path);\n  const methodMatch = matchValue(mockDispatch.method, method);\n  const bodyMatch = typeof mockDispatch.body !== 'undefined' ? matchValue(mockDispatch.body, body) : true;\n  const headersMatch = matchHeaders(mockDispatch, headers);\n  return pathMatch && methodMatch && bodyMatch && headersMatch;\n}\nfunction getResponseData(data) {\n  if (Buffer.isBuffer(data)) {\n    return data;\n  } else if (typeof data === 'object') {\n    return JSON.stringify(data);\n  } else {\n    return data.toString();\n  }\n}\nfunction getMockDispatch(mockDispatches, key) {\n  const basePath = key.query ? buildURL(key.path, key.query) : key.path;\n  const resolvedPath = typeof basePath === 'string' ? safeUrl(basePath) : basePath;\n\n  // Match path\n  let matchedMockDispatches = mockDispatches.filter(_ref3 => {\n    let {\n      consumed\n    } = _ref3;\n    return !consumed;\n  }).filter(_ref4 => {\n    let {\n      path\n    } = _ref4;\n    return matchValue(safeUrl(path), resolvedPath);\n  });\n  if (matchedMockDispatches.length === 0) {\n    throw new MockNotMatchedError(`Mock dispatch not matched for path '${resolvedPath}'`);\n  }\n\n  // Match method\n  matchedMockDispatches = matchedMockDispatches.filter(_ref5 => {\n    let {\n      method\n    } = _ref5;\n    return matchValue(method, key.method);\n  });\n  if (matchedMockDispatches.length === 0) {\n    throw new MockNotMatchedError(`Mock dispatch not matched for method '${key.method}'`);\n  }\n\n  // Match body\n  matchedMockDispatches = matchedMockDispatches.filter(_ref6 => {\n    let {\n      body\n    } = _ref6;\n    return typeof body !== 'undefined' ? matchValue(body, key.body) : true;\n  });\n  if (matchedMockDispatches.length === 0) {\n    throw new MockNotMatchedError(`Mock dispatch not matched for body '${key.body}'`);\n  }\n\n  // Match headers\n  matchedMockDispatches = matchedMockDispatches.filter(mockDispatch => matchHeaders(mockDispatch, key.headers));\n  if (matchedMockDispatches.length === 0) {\n    throw new MockNotMatchedError(`Mock dispatch not matched for headers '${typeof key.headers === 'object' ? JSON.stringify(key.headers) : key.headers}'`);\n  }\n  return matchedMockDispatches[0];\n}\nfunction addMockDispatch(mockDispatches, key, data) {\n  const baseData = {\n    timesInvoked: 0,\n    times: 1,\n    persist: false,\n    consumed: false\n  };\n  const replyData = typeof data === 'function' ? {\n    callback: data\n  } : {\n    ...data\n  };\n  const newMockDispatch = {\n    ...baseData,\n    ...key,\n    pending: true,\n    data: {\n      error: null,\n      ...replyData\n    }\n  };\n  mockDispatches.push(newMockDispatch);\n  return newMockDispatch;\n}\nfunction deleteMockDispatch(mockDispatches, key) {\n  const index = mockDispatches.findIndex(dispatch => {\n    if (!dispatch.consumed) {\n      return false;\n    }\n    return matchKey(dispatch, key);\n  });\n  if (index !== -1) {\n    mockDispatches.splice(index, 1);\n  }\n}\nfunction buildKey(opts) {\n  const {\n    path,\n    method,\n    body,\n    headers,\n    query\n  } = opts;\n  return {\n    path,\n    method,\n    body,\n    headers,\n    query\n  };\n}\nfunction generateKeyValues(data) {\n  return Object.entries(data).reduce((keyValuePairs, _ref7) => {\n    let [key, value] = _ref7;\n    return [...keyValuePairs, Buffer.from(`${key}`), Array.isArray(value) ? value.map(x => Buffer.from(`${x}`)) : Buffer.from(`${value}`)];\n  }, []);\n}\n\n/**\n * @see https://developer.mozilla.org/en-US/docs/Web/HTTP/Status\n * @param {number} statusCode\n */\nfunction getStatusText(statusCode) {\n  return STATUS_CODES[statusCode] || 'unknown';\n}\nasync function getResponse(body) {\n  const buffers = [];\n  for await (const data of body) {\n    buffers.push(data);\n  }\n  return Buffer.concat(buffers).toString('utf8');\n}\n\n/**\n * Mock dispatch function used to simulate undici dispatches\n */\nfunction mockDispatch(opts, handler) {\n  // Get mock dispatch from built key\n  const key = buildKey(opts);\n  const mockDispatch = getMockDispatch(this[kDispatches], key);\n  mockDispatch.timesInvoked++;\n\n  // Here's where we resolve a callback if a callback is present for the dispatch data.\n  if (mockDispatch.data.callback) {\n    mockDispatch.data = {\n      ...mockDispatch.data,\n      ...mockDispatch.data.callback(opts)\n    };\n  }\n\n  // Parse mockDispatch data\n  const {\n    data: {\n      statusCode,\n      data,\n      headers,\n      trailers,\n      error\n    },\n    delay,\n    persist\n  } = mockDispatch;\n  const {\n    timesInvoked,\n    times\n  } = mockDispatch;\n\n  // If it's used up and not persistent, mark as consumed\n  mockDispatch.consumed = !persist && timesInvoked >= times;\n  mockDispatch.pending = timesInvoked < times;\n\n  // If specified, trigger dispatch error\n  if (error !== null) {\n    deleteMockDispatch(this[kDispatches], key);\n    handler.onError(error);\n    return true;\n  }\n\n  // Handle the request with a delay if necessary\n  if (typeof delay === 'number' && delay > 0) {\n    setTimeout(() => {\n      handleReply(this[kDispatches]);\n    }, delay);\n  } else {\n    handleReply(this[kDispatches]);\n  }\n  function handleReply(mockDispatches) {\n    let _data = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : data;\n    // fetch's HeadersList is a 1D string array\n    const optsHeaders = Array.isArray(opts.headers) ? buildHeadersFromArray(opts.headers) : opts.headers;\n    const body = typeof _data === 'function' ? _data({\n      ...opts,\n      headers: optsHeaders\n    }) : _data;\n\n    // util.types.isPromise is likely needed for jest.\n    if (isPromise(body)) {\n      // If handleReply is asynchronous, throwing an error\n      // in the callback will reject the promise, rather than\n      // synchronously throw the error, which breaks some tests.\n      // Rather, we wait for the callback to resolve if it is a\n      // promise, and then re-run handleReply with the new body.\n      body.then(newData => handleReply(mockDispatches, newData));\n      return;\n    }\n    const responseData = getResponseData(body);\n    const responseHeaders = generateKeyValues(headers);\n    const responseTrailers = generateKeyValues(trailers);\n    handler.abort = nop;\n    handler.onHeaders(statusCode, responseHeaders, resume, getStatusText(statusCode));\n    handler.onData(Buffer.from(responseData));\n    handler.onComplete(responseTrailers);\n    deleteMockDispatch(mockDispatches, key);\n  }\n  function resume() {}\n  return true;\n}\nfunction buildMockDispatch() {\n  const agent = this[kMockAgent];\n  const origin = this[kOrigin];\n  const originalDispatch = this[kOriginalDispatch];\n  return function dispatch(opts, handler) {\n    if (agent.isMockActive) {\n      try {\n        mockDispatch.call(this, opts, handler);\n      } catch (error) {\n        if (error instanceof MockNotMatchedError) {\n          const netConnect = agent[kGetNetConnect]();\n          if (netConnect === false) {\n            throw new MockNotMatchedError(`${error.message}: subsequent request to origin ${origin} was not allowed (net.connect disabled)`);\n          }\n          if (checkNetConnect(netConnect, origin)) {\n            originalDispatch.call(this, opts, handler);\n          } else {\n            throw new MockNotMatchedError(`${error.message}: subsequent request to origin ${origin} was not allowed (net.connect is not enabled for this origin)`);\n          }\n        } else {\n          throw error;\n        }\n      }\n    } else {\n      originalDispatch.call(this, opts, handler);\n    }\n  };\n}\nfunction checkNetConnect(netConnect, origin) {\n  const url = new URL(origin);\n  if (netConnect === true) {\n    return true;\n  } else if (Array.isArray(netConnect) && netConnect.some(matcher => matchValue(matcher, url.host))) {\n    return true;\n  }\n  return false;\n}\nfunction buildMockOptions(opts) {\n  if (opts) {\n    const {\n      agent,\n      ...mockOptions\n    } = opts;\n    return mockOptions;\n  }\n}\nmodule.exports = {\n  getResponseData,\n  getMockDispatch,\n  addMockDispatch,\n  deleteMockDispatch,\n  buildKey,\n  generateKeyValues,\n  matchValue,\n  getResponse,\n  getStatusText,\n  mockDispatch,\n  buildMockDispatch,\n  checkNetConnect,\n  buildMockOptions,\n  getHeaderByName\n};","map":{"version":3,"names":["MockNotMatchedError","require","kDispatches","kMockAgent","kOriginalDispatch","kOrigin","kGetNetConnect","buildURL","nop","STATUS_CODES","types","isPromise","matchValue","match","value","RegExp","test","lowerCaseEntries","headers","Object","fromEntries","entries","map","_ref","headerName","headerValue","toLocaleLowerCase","getHeaderByName","key","Array","isArray","i","length","undefined","get","buildHeadersFromArray","clone","slice","index","push","matchHeaders","mockDispatch","matchHeaderName","matchHeaderValue","safeUrl","path","pathSegments","split","qp","URLSearchParams","pop","sort","toString","join","matchKey","_ref2","method","body","pathMatch","methodMatch","bodyMatch","headersMatch","getResponseData","data","Buffer","isBuffer","JSON","stringify","getMockDispatch","mockDispatches","basePath","query","resolvedPath","matchedMockDispatches","filter","_ref3","consumed","_ref4","_ref5","_ref6","addMockDispatch","baseData","timesInvoked","times","persist","replyData","callback","newMockDispatch","pending","error","deleteMockDispatch","findIndex","dispatch","splice","buildKey","opts","generateKeyValues","reduce","keyValuePairs","_ref7","from","x","getStatusText","statusCode","getResponse","buffers","concat","handler","trailers","delay","onError","setTimeout","handleReply","_data","arguments","optsHeaders","then","newData","responseData","responseHeaders","responseTrailers","abort","onHeaders","resume","onData","onComplete","buildMockDispatch","agent","origin","originalDispatch","isMockActive","call","netConnect","message","checkNetConnect","url","URL","some","matcher","host","buildMockOptions","mockOptions","module","exports"],"sources":["/Users/aluabajzanova/Desktop/skyline /node_modules/undici/lib/mock/mock-utils.js"],"sourcesContent":["'use strict'\n\nconst { MockNotMatchedError } = require('./mock-errors')\nconst {\n  kDispatches,\n  kMockAgent,\n  kOriginalDispatch,\n  kOrigin,\n  kGetNetConnect\n} = require('./mock-symbols')\nconst { buildURL, nop } = require('../core/util')\nconst { STATUS_CODES } = require('http')\nconst {\n  types: {\n    isPromise\n  }\n} = require('util')\n\nfunction matchValue (match, value) {\n  if (typeof match === 'string') {\n    return match === value\n  }\n  if (match instanceof RegExp) {\n    return match.test(value)\n  }\n  if (typeof match === 'function') {\n    return match(value) === true\n  }\n  return false\n}\n\nfunction lowerCaseEntries (headers) {\n  return Object.fromEntries(\n    Object.entries(headers).map(([headerName, headerValue]) => {\n      return [headerName.toLocaleLowerCase(), headerValue]\n    })\n  )\n}\n\n/**\n * @param {import('../../index').Headers|string[]|Record<string, string>} headers\n * @param {string} key\n */\nfunction getHeaderByName (headers, key) {\n  if (Array.isArray(headers)) {\n    for (let i = 0; i < headers.length; i += 2) {\n      if (headers[i].toLocaleLowerCase() === key.toLocaleLowerCase()) {\n        return headers[i + 1]\n      }\n    }\n\n    return undefined\n  } else if (typeof headers.get === 'function') {\n    return headers.get(key)\n  } else {\n    return lowerCaseEntries(headers)[key.toLocaleLowerCase()]\n  }\n}\n\n/** @param {string[]} headers */\nfunction buildHeadersFromArray (headers) { // fetch HeadersList\n  const clone = headers.slice()\n  const entries = []\n  for (let index = 0; index < clone.length; index += 2) {\n    entries.push([clone[index], clone[index + 1]])\n  }\n  return Object.fromEntries(entries)\n}\n\nfunction matchHeaders (mockDispatch, headers) {\n  if (typeof mockDispatch.headers === 'function') {\n    if (Array.isArray(headers)) { // fetch HeadersList\n      headers = buildHeadersFromArray(headers)\n    }\n    return mockDispatch.headers(headers ? lowerCaseEntries(headers) : {})\n  }\n  if (typeof mockDispatch.headers === 'undefined') {\n    return true\n  }\n  if (typeof headers !== 'object' || typeof mockDispatch.headers !== 'object') {\n    return false\n  }\n\n  for (const [matchHeaderName, matchHeaderValue] of Object.entries(mockDispatch.headers)) {\n    const headerValue = getHeaderByName(headers, matchHeaderName)\n\n    if (!matchValue(matchHeaderValue, headerValue)) {\n      return false\n    }\n  }\n  return true\n}\n\nfunction safeUrl (path) {\n  if (typeof path !== 'string') {\n    return path\n  }\n\n  const pathSegments = path.split('?')\n\n  if (pathSegments.length !== 2) {\n    return path\n  }\n\n  const qp = new URLSearchParams(pathSegments.pop())\n  qp.sort()\n  return [...pathSegments, qp.toString()].join('?')\n}\n\nfunction matchKey (mockDispatch, { path, method, body, headers }) {\n  const pathMatch = matchValue(mockDispatch.path, path)\n  const methodMatch = matchValue(mockDispatch.method, method)\n  const bodyMatch = typeof mockDispatch.body !== 'undefined' ? matchValue(mockDispatch.body, body) : true\n  const headersMatch = matchHeaders(mockDispatch, headers)\n  return pathMatch && methodMatch && bodyMatch && headersMatch\n}\n\nfunction getResponseData (data) {\n  if (Buffer.isBuffer(data)) {\n    return data\n  } else if (typeof data === 'object') {\n    return JSON.stringify(data)\n  } else {\n    return data.toString()\n  }\n}\n\nfunction getMockDispatch (mockDispatches, key) {\n  const basePath = key.query ? buildURL(key.path, key.query) : key.path\n  const resolvedPath = typeof basePath === 'string' ? safeUrl(basePath) : basePath\n\n  // Match path\n  let matchedMockDispatches = mockDispatches.filter(({ consumed }) => !consumed).filter(({ path }) => matchValue(safeUrl(path), resolvedPath))\n  if (matchedMockDispatches.length === 0) {\n    throw new MockNotMatchedError(`Mock dispatch not matched for path '${resolvedPath}'`)\n  }\n\n  // Match method\n  matchedMockDispatches = matchedMockDispatches.filter(({ method }) => matchValue(method, key.method))\n  if (matchedMockDispatches.length === 0) {\n    throw new MockNotMatchedError(`Mock dispatch not matched for method '${key.method}'`)\n  }\n\n  // Match body\n  matchedMockDispatches = matchedMockDispatches.filter(({ body }) => typeof body !== 'undefined' ? matchValue(body, key.body) : true)\n  if (matchedMockDispatches.length === 0) {\n    throw new MockNotMatchedError(`Mock dispatch not matched for body '${key.body}'`)\n  }\n\n  // Match headers\n  matchedMockDispatches = matchedMockDispatches.filter((mockDispatch) => matchHeaders(mockDispatch, key.headers))\n  if (matchedMockDispatches.length === 0) {\n    throw new MockNotMatchedError(`Mock dispatch not matched for headers '${typeof key.headers === 'object' ? JSON.stringify(key.headers) : key.headers}'`)\n  }\n\n  return matchedMockDispatches[0]\n}\n\nfunction addMockDispatch (mockDispatches, key, data) {\n  const baseData = { timesInvoked: 0, times: 1, persist: false, consumed: false }\n  const replyData = typeof data === 'function' ? { callback: data } : { ...data }\n  const newMockDispatch = { ...baseData, ...key, pending: true, data: { error: null, ...replyData } }\n  mockDispatches.push(newMockDispatch)\n  return newMockDispatch\n}\n\nfunction deleteMockDispatch (mockDispatches, key) {\n  const index = mockDispatches.findIndex(dispatch => {\n    if (!dispatch.consumed) {\n      return false\n    }\n    return matchKey(dispatch, key)\n  })\n  if (index !== -1) {\n    mockDispatches.splice(index, 1)\n  }\n}\n\nfunction buildKey (opts) {\n  const { path, method, body, headers, query } = opts\n  return {\n    path,\n    method,\n    body,\n    headers,\n    query\n  }\n}\n\nfunction generateKeyValues (data) {\n  return Object.entries(data).reduce((keyValuePairs, [key, value]) => [\n    ...keyValuePairs,\n    Buffer.from(`${key}`),\n    Array.isArray(value) ? value.map(x => Buffer.from(`${x}`)) : Buffer.from(`${value}`)\n  ], [])\n}\n\n/**\n * @see https://developer.mozilla.org/en-US/docs/Web/HTTP/Status\n * @param {number} statusCode\n */\nfunction getStatusText (statusCode) {\n  return STATUS_CODES[statusCode] || 'unknown'\n}\n\nasync function getResponse (body) {\n  const buffers = []\n  for await (const data of body) {\n    buffers.push(data)\n  }\n  return Buffer.concat(buffers).toString('utf8')\n}\n\n/**\n * Mock dispatch function used to simulate undici dispatches\n */\nfunction mockDispatch (opts, handler) {\n  // Get mock dispatch from built key\n  const key = buildKey(opts)\n  const mockDispatch = getMockDispatch(this[kDispatches], key)\n\n  mockDispatch.timesInvoked++\n\n  // Here's where we resolve a callback if a callback is present for the dispatch data.\n  if (mockDispatch.data.callback) {\n    mockDispatch.data = { ...mockDispatch.data, ...mockDispatch.data.callback(opts) }\n  }\n\n  // Parse mockDispatch data\n  const { data: { statusCode, data, headers, trailers, error }, delay, persist } = mockDispatch\n  const { timesInvoked, times } = mockDispatch\n\n  // If it's used up and not persistent, mark as consumed\n  mockDispatch.consumed = !persist && timesInvoked >= times\n  mockDispatch.pending = timesInvoked < times\n\n  // If specified, trigger dispatch error\n  if (error !== null) {\n    deleteMockDispatch(this[kDispatches], key)\n    handler.onError(error)\n    return true\n  }\n\n  // Handle the request with a delay if necessary\n  if (typeof delay === 'number' && delay > 0) {\n    setTimeout(() => {\n      handleReply(this[kDispatches])\n    }, delay)\n  } else {\n    handleReply(this[kDispatches])\n  }\n\n  function handleReply (mockDispatches, _data = data) {\n    // fetch's HeadersList is a 1D string array\n    const optsHeaders = Array.isArray(opts.headers)\n      ? buildHeadersFromArray(opts.headers)\n      : opts.headers\n    const body = typeof _data === 'function'\n      ? _data({ ...opts, headers: optsHeaders })\n      : _data\n\n    // util.types.isPromise is likely needed for jest.\n    if (isPromise(body)) {\n      // If handleReply is asynchronous, throwing an error\n      // in the callback will reject the promise, rather than\n      // synchronously throw the error, which breaks some tests.\n      // Rather, we wait for the callback to resolve if it is a\n      // promise, and then re-run handleReply with the new body.\n      body.then((newData) => handleReply(mockDispatches, newData))\n      return\n    }\n\n    const responseData = getResponseData(body)\n    const responseHeaders = generateKeyValues(headers)\n    const responseTrailers = generateKeyValues(trailers)\n\n    handler.abort = nop\n    handler.onHeaders(statusCode, responseHeaders, resume, getStatusText(statusCode))\n    handler.onData(Buffer.from(responseData))\n    handler.onComplete(responseTrailers)\n    deleteMockDispatch(mockDispatches, key)\n  }\n\n  function resume () {}\n\n  return true\n}\n\nfunction buildMockDispatch () {\n  const agent = this[kMockAgent]\n  const origin = this[kOrigin]\n  const originalDispatch = this[kOriginalDispatch]\n\n  return function dispatch (opts, handler) {\n    if (agent.isMockActive) {\n      try {\n        mockDispatch.call(this, opts, handler)\n      } catch (error) {\n        if (error instanceof MockNotMatchedError) {\n          const netConnect = agent[kGetNetConnect]()\n          if (netConnect === false) {\n            throw new MockNotMatchedError(`${error.message}: subsequent request to origin ${origin} was not allowed (net.connect disabled)`)\n          }\n          if (checkNetConnect(netConnect, origin)) {\n            originalDispatch.call(this, opts, handler)\n          } else {\n            throw new MockNotMatchedError(`${error.message}: subsequent request to origin ${origin} was not allowed (net.connect is not enabled for this origin)`)\n          }\n        } else {\n          throw error\n        }\n      }\n    } else {\n      originalDispatch.call(this, opts, handler)\n    }\n  }\n}\n\nfunction checkNetConnect (netConnect, origin) {\n  const url = new URL(origin)\n  if (netConnect === true) {\n    return true\n  } else if (Array.isArray(netConnect) && netConnect.some((matcher) => matchValue(matcher, url.host))) {\n    return true\n  }\n  return false\n}\n\nfunction buildMockOptions (opts) {\n  if (opts) {\n    const { agent, ...mockOptions } = opts\n    return mockOptions\n  }\n}\n\nmodule.exports = {\n  getResponseData,\n  getMockDispatch,\n  addMockDispatch,\n  deleteMockDispatch,\n  buildKey,\n  generateKeyValues,\n  matchValue,\n  getResponse,\n  getStatusText,\n  mockDispatch,\n  buildMockDispatch,\n  checkNetConnect,\n  buildMockOptions,\n  getHeaderByName\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}